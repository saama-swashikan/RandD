apiVersion: v1
kind: Pod
metadata:
  annotations:
  name: dashboard-{BUILD_NUMBER}-{TARGET_ACCOUNT_NAME}
  namespace: {MASTER_NAMESPACE}
spec:
  containers:
  - name: dashboard
    args:
    - -c
    - python3 /home/__main__.py
    command:
    - sh
    env:
    - name: environment
      value: {ENVIRONMENT}
    - name: lsac_app_client_id
      value: data-onboarding
    - name: lsac_app_client_secret
      value: {CLIENT_SECRET}
    - name: lsac_oauth_endpoint
      value: https://{DH_URL}
    - name: pda_service
      value: https://{DH_URL}.*
    - name: PYTHONPATH
      value: /home
    - name: primary_account_name
      value: sch-master
    - name: target_account
      value: {TARGET_ACCOUNT_NAME}
    image: 764100877844.dkr.ecr.us-east-1.amazonaws.com/dh-preview-apps:dh-metrics
    imagePullPolicy: Always
    resources:
      requests:
        cpu: '1'
        memory: 500Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /root/.postgresql
      name: rds-ssl
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-rjc6c
      readOnly: true
    workingDir: /home
  nodeSelector:
    nodetype: job
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: rds-ssl
    secret:
      defaultMode: 420
      secretName: rds-ssl
  - name: kube-api-access-rjc6c
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
